%% Properties to change
dataprefix='IPC';
datapath='C:\Users\Mike\Desktop\IPC_nirs';
lenConvo=4500; % In frames, depends on sample rate
hyper=1; %0=no 1=yes
scn2vis=3; %Which scan to inspect
compare=1; %0=off, 1=on

% good=41:45; %Subjects with NO high magnitude channels
% bad=[31,52,58,65,69]; %Subjects with high magnitude channels

good=[32,37,45,49,60,65,69]; %Subjects with NO high magnitude channels
bad=[34,36,39,41,43,50,51,56]; %Subjects with high magnitude channels

%Areas to average, based on probe and what areas you want to inspect
arNames=["mPFC","dlPFC","TPJ","VM"];
ars={7:14;[1:6,15:20];[25:31,36:42];[21:24,32:35]}; %mPFC, lPFC, TPJ (Gestalt), VM
    %Alternative areas
% arNames={'VAT','FPN','DMN','DAT'};
% ars={[1:2,5,16,20,26];[3:4,10,15,18:19,25,31,36:37];[6:9,11:14,17,22,27:28,30,38:39,41];...
%     [21,23:24,32:35,39:40,42]}; %VAT, FPN, DMN, DAT

% %Aga's areas: %mpfc, LdlPFC, RdlPFC, LTPJ, RTPJ, vm
% arNames=["mPFC","LdlPFC","RdlPFC","LTPJ","RTPJ","VM"];
% ars={[1:3,8, 16:17, 19, 58];[5,6,7,9, 13,14]; [59, 60, 61, 62, 63, 64];...
%     [43:45, 52, 54:55]; [96:98, 105, 107, 110]; [47, 48, 56, 93, 94, 102, 104, 106]}; 

%Areas w/ channels removed to correlate for comparison 
%reduced magnitude vs. no reduction vs. removed channels
arsR={[7:10,12];[1:3,5,16:18,20];[25:28,30:31,36:37,40:41];[21:22,24,32:35]}; % For IPC data
%arsR={[7:10,12,14];[1:3,5:6,15:18,20];[25,26,28,30,36:37,39,41];[21:22,24,32,34:35]}; % For SD data

% %Aga's areas: %mpfc, LdlPFC, RdlPFC, LTPJ, RTPJ, vm
% arsR={[1:3,8, 16:17, 19, 58];[5,6,7,9, 13,14]; [59, 60, 61, 62, 63, 64];...
%     [43:45, 52, 54:55]; [96:98, 105, 107, 110]; [47, 48, 56, 93, 94, 102, 106]}; 

%% Load in the data
load(strcat(datapath,filesep,dataprefix,'_compileR.mat'),'oxy3D')

if hyper
    [~, nchans, nsubs]=size(oxy3D(scn2vis).sub1);
else
    [~, nchans, nsubs]=size(oxy3D(scn2vis).subdata);
end

%% Check if reducing loud channels changes dyadic correlation
s1og=zeros(lenConvo,length(ars),nsubs);
s1elim=zeros(lenConvo,length(ars),nsubs);
s1red=zeros(lenConvo,length(ars),nsubs);
if hyper
    s2og=zeros(lenConvo,length(ars),nsubs);
    s2elim=zeros(lenConvo,length(ars),nsubs);
    s2red=zeros(lenConvo,length(ars),nsubs);
end
for sb=1:nsubs
    for ar=1:length(ars)
        if hyper
            s1og(:,ar,sb)=nanmean(oxy3D(scn2vis).sub1(1:lenConvo,cell2mat(ars(ar,1)),sb),2);
            s2og(:,ar,sb)=nanmean(oxy3D(scn2vis).sub2(1:lenConvo,cell2mat(ars(ar,1)),sb),2);

            s1elim(:,ar,sb)=nanmean(oxy3D(scn2vis).sub1(1:lenConvo,cell2mat(arsR(ar,1)),sb),2);
            s2elim(:,ar,sb)=nanmean(oxy3D(scn2vis).sub2(1:lenConvo,cell2mat(arsR(ar,1)),sb),2);
    
            s1red(:,ar,sb)=nanmean(oxy3D(scn2vis).sub1R(1:lenConvo,cell2mat(ars(ar,1)),sb),2);
            s2red(:,ar,sb)=nanmean(oxy3D(scn2vis).sub2R(1:lenConvo,cell2mat(ars(ar,1)),sb),2);
        else
            s1og(:,ar,sb)=nanmean(oxy3D(scn2vis).subdata(1:lenConvo,cell2mat(ars(ar,1)),sb),2);
            s1elim(:,ar,sb)=nanmean(oxy3D(scn2vis).subdata(1:lenConvo,cell2mat(arsR(ar,1)),sb),2);
            s1red(:,ar,sb)=nanmean(oxy3D(scn2vis).subR(1:lenConvo,cell2mat(ars(ar,1)),sb),2);
        end
    end
end

if hyper
    %Run dyadic correlation for no reduction
    for sb=1:nsubs
        for ar=1:length(ars)
            [r,p]=corrcoef(s1og(:,ar,sb),s2og(:,ar,sb));
            ogchans(sb,ar,1)=r(1,2);
            ogchans(sb,ar,2)=p(1,2);
    
            [r,p]=corrcoef(s1elim(:,ar,sb),s2elim(:,ar,sb));
            elimchans(sb,ar,1)=r(1,2);
            elimchans(sb,ar,2)=p(1,2);
    
            [r,p]=corrcoef(s1red(:,ar,sb),s2red(:,ar,sb));
            redchans(sb,ar,1)=r(1,2);
            redchans(sb,ar,2)=p(1,2);
        end
    end
else
    ogMean=nanmean(s1og,3);
    elimMean=nanmean(s1elim,3);
    redMean=nanmean(s1red,3);
    for sb=1:nsubs
        newogM=(ogMean*nsubs)-s1og(:,ar,sb)/(nsubs-1);
        newelimM=(elimMean*nsubs)-s1elim(:,ar,sb)/(nsubs-1);
        newredM=(redMean*nsubs)-s1red(:,ar,sb)/(nsubs-1);
        for ar=1:length(ars)
            [ogchans(sb,ar,1),ogchans(sb,ar,2)]=corr(s1og(:,ar,sb),newogM(:,ar));
            [elimchans(sb,ar,1),elimchans(sb,ar,2)]=corr(s1elim(:,ar,sb),newelimM(:,ar));
            [redchans(sb,ar,1),redchans(sb,ar,2)]=corr(s1red(:,ar,sb),newredM(:,ar));
        end
    end
end

good2corr=[ogchans(good,:,1),elimchans(good,:,1),redchans(good,:,1)];
bad2corr=[ogchans(bad,:,1),elimchans(bad,:,1),redchans(bad,:,1)];

%Figure to visualize correlation difference for bad
figure()
tiledlayout(3,1,'TileSpacing','none')
nexttile
imagesc(ogchans(bad,:,1));xticks(2);
ylabel('Original');yticks=([2,4,6]);
colorbar
nexttile
imagesc(elimchans(bad,:,1));xticks(2);
ylabel('Eliminated');yticks=([2,4,6]);
colorbar
nexttile
imagesc(redchans(bad,:,1))
yticks=([2,4,6]);xticks(1:4);
xticklabels(arNames);ylabel('Reduced');
colorbar

%Figure to visualize correlation difference for good
figure()
tiledlayout(3,1,'TileSpacing','none')
nexttile
imagesc(ogchans(good,:,1));xticks(2);
ylabel('Original');yticks=([2,4,6]);
colorbar
nexttile
imagesc(elimchans(good,:,1));xticks(2);
ylabel('Eliminated');yticks=([2,4,6]);
colorbar
nexttile
imagesc(redchans(good,:,1))
yticks=([2,4,6]);xticks(1:4);
xticklabels(arNames);ylabel('Reduced');
colorbar

%% No reduction vs. remove channels vs. reduce magnitude
%To visualize how different eliminating vs reducing look for area specific 
compInfo = inputdlg({'Which dyad/subject to compare visually? (1-n)'},'Vis. comp. Info', [1 75]); 
% Only used if comparing
sb=str2num(cell2mat(compInfo(1))); %Any number of subjects to compare original vs. reduced magnnitude

arComp=nan(lenConvo,3,length(ars));

for ar=1:length(ars)
    arComp(:,:,ar)=[s1og(:,ar,sb),s1elim(:,ar,sb),s1red(:,ar,sb)];
end

for ar = 1:length(ars)
    figure()
    tiledlayout(2,1)
    nexttile
    plot(arComp(:,:,ar))
    title(strcat('Area-',arNames{1,ar},': All'))
    legend({'Original','Eliminated','Reduced'})
    nexttile
    plot(arComp(:,2:3,ar))
    title(strcat('Area-',arNames{1,ar},': Compare'))
    legend({'Eliminated','Reduced'})
end

%% Visually compare reduced magnitude channels for any number of dyads/subjects
if compare
    compInfo = inputdlg({'Which subject/dyads to compare visually? (1-n)'},'Vis. comp. Info', [1 75]); 
    % Only used if comparing
    subs2comp=str2num(cell2mat(compInfo(1))); %Any number of subjects to compare original vs. reduced magnnitude
    
    for s=subs2comp
        if hyper
            figure()
            tiledlayout(4,1)
            nexttile
            plot(oxy3D(scn2vis).sub1(1:lenConvo,:,s))
            title(strcat('No Reduction, S1, Dyad: ',num2str(s)))
            nexttile
            plot(oxy3D(scn2vis).sub1R(1:lenConvo,:,s))
            title(strcat('Reduced Magnitude, S1, Dyad: ',num2str(s)))
            nexttile
            plot(oxy3D(scn2vis).sub2(1:lenConvo,:,s))
            title(strcat('No Reduction, S2, Dyad: ',num2str(s)))
            nexttile
            plot(oxy3D(scn2vis).sub2R(1:lenConvo,:,s))
            title(strcat('Reduced Magnitude, S2, Dyad: ',num2str(s)))
        else
            figure()
            tiledlayout(2,1)
            nexttile
            plot(oxy3D(scn2vis).subdata(1:lenConvo,:,s))
            title(strcat('No Reduction, Subject: ',num2str(s)))
            nexttile
            plot(oxy3D(scn2vis).subR(1:lenConvo,:,s))
            title(strcat('Reduced Magnitude, Subject: ',num2str(s)))
        end
    end
end

%% Group Averages
mPFC=[1,5,9];
dlPFC=[2,6,10];
TPJ=[3,7,11];
SPL=[4,8,12];

badGroup(:,1)=mean(atanh(bad2corr(:,mPFC)));
badGroup(:,2)=mean(atanh(bad2corr(:,dlPFC)));
badGroup(:,3)=mean(atanh(bad2corr(:,TPJ)));
badGroup(:,4)=mean(atanh(bad2corr(:,SPL)));

goodGroup(:,1)=mean(atanh(good2corr(:,mPFC)));
goodGroup(:,2)=mean(atanh(good2corr(:,dlPFC)));
goodGroup(:,3)=mean(atanh(good2corr(:,TPJ)));
goodGroup(:,4)=mean(atanh(good2corr(:,SPL)));

badGroup=array2table(badGroup','VariableNames',{'Original','Eliminated','Reduced'},...
    'RowNames',{'mPFC','dlPFC','TPJ','SPL'});
goodGroup=array2table(goodGroup','VariableNames',{'Original','Eliminated','Reduced'},...
    'RowNames',{'mPFC','dlPFC','TPJ','SPL'});


%Compare all
corrGroup(:,1)=nanmean(atanh(ogchans(:,:,1)));
corrGroup(:,2)=nanmean(atanh(elimchans(:,:,1)));
corrGroup(:,3)=nanmean(atanh(redchans(:,:,1)));

corrGroup=array2table(corrGroup,'VariableNames',{'Original','Eliminated','Reduced'},...
    'RowNames',{'mPFC','dlPFC','TPJ','SPL'});

[mask_gr, critP]=fdr_bky(ogchans(:,:,2),0.05,'yes'); %Creates a mask for sig. areas
[mask_gr, critP]=fdr_bky(elimchans(:,:,2),0.05,'yes');
[mask_gr, critP]=fdr_bky(redchans(:,:,2),0.05,'yes');

[h,p,ci,stats] = ttest(ogchans(:,:,1))
[h,p,ci,stats] = ttest(elimchans(:,:,1))
[h,p,ci,stats] = ttest(redchans(:,:,1))
